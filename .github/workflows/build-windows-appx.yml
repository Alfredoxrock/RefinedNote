name: Build Windows Appx (signed)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build-appx:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Ensure signing secrets exist
        if: ${{ secrets.PFX_BASE64 && secrets.PFX_PASSWORD }}
        run: echo "Signing secrets present. Proceeding."

      - name: Fail early if signing secrets missing
        if: ${{ !secrets.PFX_BASE64 || !secrets.PFX_PASSWORD }}
        run: |
          echo "PFX_BASE64 and PFX_PASSWORD repository secrets are required to produce a signed Appx/MSIX."
          echo "Add them in GitHub > Settings > Secrets and variables > Actions and re-run this workflow."
          exit 1

      - name: Restore and expose PFX
        run: |
          # write PFX bytes from base64 secret to a temporary file
          $pfxPath = Join-Path $env:GITHUB_WORKSPACE 'build_cert.pfx'
          [System.IO.File]::WriteAllBytes($pfxPath, [System.Convert]::FromBase64String($env:PFX_BASE64))

          # convert to file:/// URL (use forward slashes)
          $abs = (Resolve-Path $pfxPath).ProviderPath
          $fileUrl = 'file:///' + ($abs -replace '\\','/')

          # export environment variables for following steps
          Add-Content -Path $env:GITHUB_ENV -Value "CSC_LINK=$fileUrl"
          Add-Content -Path $env:GITHUB_ENV -Value "CSC_KEY_PASSWORD=$env:PFX_PASSWORD"
          Write-Host "Wrote PFX to $pfxPath and exported CSC_LINK/CSC_KEY_PASSWORD to environment."
        shell: powershell

      - name: Build signed MSIX / Appx
        run: npm run build:msix

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: appx-artifacts
          path: dist_appx/**
