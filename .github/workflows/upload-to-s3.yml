name: Build NSIS and upload ZIP to S3

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (used for file name)'
        required: false
        default: '1.0.0'

jobs:
  build-and-upload:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build NSIS installer
        run: npm run dist

      - name: Create ZIP of installer
        shell: powershell
        run: |
          $version = '${{ github.event.inputs.version }}'
          if (-not $version) { $version = '1.0.0' }
          $exe = Get-ChildItem -Path dist_appx -Filter '*Setup*' -Recurse | Where-Object { $_.Extension -eq '.exe' } | Select-Object -First 1
          if (-not $exe) { Write-Error 'Installer EXE not found in dist_appx'; exit 1 }
          $zipPath = "${{ runner.temp }}\notes-installer-$version.zip"
          Compress-Archive -Path $exe.FullName -DestinationPath $zipPath -Force
          Write-Output "ZIP_PATH=$zipPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding ASCII -Append

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Debug S3 vars
        shell: powershell
        env:
          BUCKET: ${{ secrets.S3_BUCKET_NAME }}
          REGION: ${{ secrets.AWS_REGION }}
        run: |
          Write-Output "DEBUG: BUCKET='$env:BUCKET'"
          Write-Output "DEBUG: REGION='$env:REGION'"

      - name: Upload ZIP to S3 (public-read)
        shell: powershell
        env:
          BUCKET: ${{ secrets.S3_BUCKET_NAME }}
          VERSION: ${{ github.event.inputs.version }}
        run: |
          if (-not $env:VERSION) { $env:VERSION = '1.0.0' }
          $zip = $env:ZIP_PATH
          if (-not $zip) { Write-Error 'ZIP_PATH not set'; exit 1 }
          # compute SHA256 of the ZIP for verification
          $sha = (Get-FileHash -Path $zip -Algorithm SHA256).Hash
          Write-Output "ZIP_SHA256=$sha" | Out-File -FilePath $env:GITHUB_ENV -Encoding ASCII -Append
          $key = "releases/Refined-Notes-$env:VERSION.zip"
          # Do not use --acl with bucket-owner-enforced; rely on bucket policy for public-read if desired
          aws s3 cp $zip "s3://$env:BUCKET/$key"
          $url = "https://$env:BUCKET.s3.amazonaws.com/$key"
          Write-Output "Uploaded to: $url"
          Write-Output "S3_URL=$url" | Out-File -FilePath $env:GITHUB_ENV -Encoding ASCII -Append

      - name: Output public S3 URL
        run: |
          echo "Public URL: $S3_URL"
          echo "ZIP SHA256: $ZIP_SHA256"
